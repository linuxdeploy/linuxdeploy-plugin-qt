name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build-and-test:
    strategy:
      matrix:
        ARCH: [x86_64, i386, aarch64, armhf]
        USE_STATIC_RUNTIME: [""]
        UPDATE: ["1"]
        
        include:
          # test build
          - ARCH: x86_64
            DOCKER_ARCH: amd64
            BUILD_TYPE: coverage

          # experimental build
          - ARCH: x86_64
            BUILD_TYPE: appimage
            USE_STATIC_RUNTIME: -static

      fail-fast: false

    name: ${{ matrix.ARCH }}${{ matrix.USE_STATIC_RUNTIME }}
    runs-on: ubuntu-latest

    env:
      ARCH: ${{ matrix.ARCH }}
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      DEBIAN_FRONTEND: interactive
      USE_STATIC_RUNTIME: ${{ matrix.USE_STATIC_RUNTIME }}

    steps:
      # check out once git command is available
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU integration for Docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build and test AppImage
        run: bash ci/build-in-docker.sh

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AppImage ${{ matrix.ARCH }}${{ matrix.USE_STATIC_RUNTIME}}
          path: linuxdeploy-plugin-qt${{ matrix.USE_STATIC_RUNTIME}}-${{ matrix.ARCH }}.AppImage*

  upload:
    name: Create release and upload artifacts
    needs:
      - build-and-test
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/linuxdeploy*.AppImage*
